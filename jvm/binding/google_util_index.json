{
  "classes": {
    "com/google/common/annotations/Beta": {
      "annotation": "skip"
    },
    "com/google/common/base/Preconditions": {
      "methods": {
        "checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;": {}
      }
    },
    "com/google/common/base/Suppliers": {
      "methods": {
        "memoize(Lcom/google/common/base/Supplier;)Lcom/google/common/base/Supplier;": {}
      }
    },
    "com/google/common/collect/HashMultimap": {
      "methods": {
        "create()Lcom/google/common/collect/HashMultimap;": {
          "wraps": "{}"
        }
      }
    },
    "com/google/common/collect/ImmutableList": {
      "methods": {
        "of(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;": {
          "wraps": "(a0,)"
        },
        "of(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;": {
          "wraps": "(a0, a1)"
        },
        "of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;": {
          "wraps": "(a0, a1, a2)"
        },
        "of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;": {
          "wraps": "(a0, a1, a2, a3)"
        },
        "of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;": {
          "wraps": "(a0, a1, a2, a3, a4)"
        },
        "of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;": {
          "wraps": "(a0, a1, a2, a3, a4, a5)"
        },
        "of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;": {
          "wraps": "(a0, a1, a2, a3, a4, a5, a6)"
        },
        "of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;": {
          "wraps": "(a0, a1, a2, a3, a4, a5, a6, a7)"
        }
      }
    },
    "com/google/common/collect/ImmutableMap": {
      "methods": {
        "copyOf(Ljava/util/Map;)Lcom/google/common/collect/ImmutableMap;": {
          "wraps": "a0.copy()"
        }
      }
    },
    "com/google/common/collect/ImmutableSet": {
      "methods": {
        "of(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSet;": {
          "wraps": "{a0}"
        },
        "of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSet;": {
          "wraps": "{a0, a1, a2}"
        },
        "of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSet;": {
          "wraps": "{a0, a1, a2, a3, a4, a5} | set(a6)"
        }
      }
    },
    "com/google/common/collect/Lists": {
      "methods": {
        "newArrayList()Ljava/util/ArrayList;": {
          "wraps": "list()"
        },
        "newLinkedList()Ljava/util/LinkedList;": {
          "wraps": "list()"
        }
      }
    },
    "com/google/common/collect/Maps": {
      "methods": {
        "newHashMap()Ljava/util/HashMap;": {
          "wraps": "{}"
        },
        "newTreeMap()Ljava/util/TreeMap;": {
          "wraps": "{}"
        },
        "newTreeMap(Ljava/util/SortedMap;)Ljava/util/TreeMap;": {
          "wraps": "a0.copy()"
        }
      }
    },
    "com/google/common/collect/Multiset$Entry": {
      "methods": {
        "getCount()I": {}
      }
    }
  },
  "implementation": [
    "google.util.Preconditions"
  ]
}